name: Secret Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Mondays at 9am UTC
    - cron: '0 9 * * 1'

permissions:
  contents: read
  security-events: write  # Required for CodeQL to upload results
  actions: read  # Required for CodeQL

jobs:
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for scanning

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || '' }}
          head: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || 'HEAD' }}
          extra_args: --only-verified

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  github-secret-scanning:
    name: GitHub Advanced Security
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the workflow if CodeQL isn't available
    if: github.event_name != 'schedule'  # Skip on scheduled runs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  detect-secrets:
    name: Detect Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install detect-secrets
        run: |
          pip install detect-secrets

      - name: Check for new secrets
        run: |
          # Generate fresh baseline and check for secrets
          detect-secrets scan --baseline .secrets.baseline.new
          
          # Compare with existing baseline if it exists
          if [ -f .secrets.baseline ]; then
            diff_output=$(diff -u .secrets.baseline .secrets.baseline.new || true)
            if [ -n "$diff_output" ]; then
              echo "⚠️ Potential new secrets detected. Please review:"
              echo "$diff_output"
            else
              echo "✅ No new secrets detected"
            fi
          else
            echo "✅ Initial scan complete"
          fi
          
          # Check if any secrets exist
          python -c "import sys, json; data = json.load(open('.secrets.baseline.new')); sys.exit(1 if data.get('results', {}) else 0)"